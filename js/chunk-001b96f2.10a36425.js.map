{"version":3,"sources":["webpack:///./src/views/UserReplies.vue","webpack:///src/views/UserReplies.vue","webpack:///./src/views/UserReplies.vue?7ac6","webpack:///./src/views/UserReplies.vue?0e52","webpack:///./src/components/TweetReplies.vue","webpack:///src/components/TweetReplies.vue","webpack:///./src/components/TweetReplies.vue?add3","webpack:///./src/components/TweetReplies.vue?5c37","webpack:///./src/components/TweetReplies.vue?ff3b","webpack:///./src/views/UserReplies.vue?7e2d"],"names":["render","_vm","this","_c","_self","isLoading","staticClass","_l","tabs","tab","key","id","class","name","currentRoute","attrs","_v","_s","title","replies","length","_e","staticRenderFns","components","TweetReplies","Spinner","data","methods","fetchTabs","userId","UserId","User","account","avatar","Tweet","createdAt","comment","Toast","icon","created","beforeRouteUpdate","next","component","initialreplies","reply","params","_f","mixins","props","type","require","tweets","computed","updatePageNow","watch"],"mappings":"yKAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAAEF,EAAII,UAAWF,EAAG,WAAW,CAACA,EAAG,MAAM,CAACA,EAAG,KAAK,CAACG,YAAY,cAAcL,EAAIM,GAAIN,EAAIO,MAAM,SAASC,GAAK,OAAON,EAAG,KAAK,CAACO,IAAID,EAAIE,GAAGC,MAAM,CAAC,UAAW,CAAE,OAAUH,EAAII,OAASZ,EAAIa,gBAAiB,CAACX,EAAG,cAAc,CAACO,IAAID,EAAIE,GAAGL,YAAY,WAAWS,MAAM,CAAC,eAAe,OAAO,GAAK,CAAEF,KAAMJ,EAAII,QAAS,CAACZ,EAAIe,GAAG,IAAIf,EAAIgB,GAAGR,EAAIS,OAAO,QAAQ,MAAK,KAAKf,EAAG,eAAe,CAACY,MAAM,CAAC,eAAiBd,EAAIkB,WAAYlB,EAAIkB,QAAQC,OAAS,EAAGjB,EAAG,KAAK,CAACG,YAAY,OAAO,CAACL,EAAIe,GAAG,qCAAqCb,EAAG,IAAI,CAACG,YAAY,cAAc,CAACL,EAAIe,GAAG,yEAAyEf,EAAIoB,OAAO,IAEtsBC,EAAkB,G,4DC2BP,GACfC,YACAC,oBACAC,gBAEAC,OACA,OACAP,WACAd,aACAS,8CAGAa,SACAC,aACA,WACA,CACAjB,KACAO,WACAL,aAEA,CACAF,KACAO,WACAL,qBAEA,CACAF,KACAO,cACAL,qBAIA,0BACA,IAEA,uCAAAgB,WACA,kBACA,2BAEA,WAAAH,GAAA,EACA,wBACAf,aACAmB,qBACAC,MACApB,iBACAqB,6BACAnB,uBACAoB,4BAEAC,OACAH,MACApB,wBACAqB,sCAGAG,kCACAC,qBAEA,kBACA,SACA,kBACAC,aACAC,aACApB,mCAKAqB,UACA,MAAA5B,MAAA,mBACA,yBACA,mBAEA6B,yBACA,SAAA7B,GAAA,SACA,yBACA,kBACA8B,MC1GqV,I,wBCQjVC,EAAY,eACd,EACA1C,EACAsB,GACA,EACA,KACA,WACA,MAIa,aAAAoB,E,2CCnBf,IAAI1C,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,UAAU,CAACG,YAAY,yBAAyB,CAACH,EAAG,MAAM,CAACG,YAAY,2BAA2BL,EAAIM,GAAIN,EAAI0C,gBAAgB,SAASC,GAAO,OAAOzC,EAAG,MAAM,CAACO,IAAIkC,EAAMjC,GAAGL,YAAY,SAAS,CAACH,EAAG,cAAc,CAACG,YAAY,SAASS,MAAM,CAAC,GAAK,CAAEF,KAAM,OAAQgC,OAAQ,CAAElC,GAAIiC,EAAMd,WAAa,CAAC3B,EAAG,MAAM,CAACG,YAAY,YAAYS,MAAM,CAAC,IAAMd,EAAI6C,GAAG,aAAP7C,CAAqB2C,EAAMb,KAAKE,QAAQ,IAAM,QAAQ9B,EAAG,MAAM,CAACG,YAAY,cAAc,CAACH,EAAG,MAAM,CAACG,YAAY,cAAc,CAACH,EAAG,cAAc,CAACG,YAAY,kBAAkBS,MAAM,CAAC,GAAK,CAAEF,KAAM,OAAQgC,OAAQ,CAAElC,GAAIiC,EAAMd,WAAa,CAAC7B,EAAIe,GAAGf,EAAIgB,GAAG2B,EAAMb,KAAKlB,SAASV,EAAG,cAAc,CAACG,YAAY,qBAAqBS,MAAM,CAAC,GAAK,CAAEF,KAAM,OAAQgC,OAAQ,CAAElC,GAAIiC,EAAMd,WAAa,CAAC7B,EAAIe,GAAG,IAAIf,EAAIgB,GAAG2B,EAAMb,KAAKC,SAAS,MAAM/B,EAAIgB,GAAGhB,EAAI6C,GAAG,UAAP7C,CAAkB2C,EAAMT,gBAAgB,GAAGhC,EAAG,MAAM,CAACG,YAAY,eAAe,CAACH,EAAG,OAAO,CAACG,YAAY,cAAc,CAACL,EAAIe,GAAG,SAASb,EAAG,cAAc,CAACG,YAAY,UAAUS,MAAM,CAAC,GAAK,CAAEF,KAAM,OAAQgC,OAAQ,CAAElC,GAAIiC,EAAMV,MAAMH,KAAKpB,OAAS,CAACV,EAAIe,GAAG,IAAIf,EAAIgB,GAAG2B,EAAMV,MAAMH,KAAKC,aAAa,GAAG7B,EAAG,IAAI,CAACG,YAAY,iBAAiB,CAACL,EAAIe,GAAGf,EAAIgB,GAAG2B,EAAMR,eAAe,MAAK,MAEjsCd,EAAkB,G,wBC6BP,GACfyB,uBACAC,OACAL,gBACAM,WACAC,aAGAxB,OACA,OACAyB,YAGAC,aACA,gBAAAC,iCAEA1B,YACA,gCAEA2B,OACAD,gBACA,oBACA,uBCrDsV,I,wBCQlVX,EAAY,eACd,EACA1C,EACAsB,GACA,EACA,KACA,WACA,MAIa,OAAAoB,E,2CCnBf,W,kCCAA","file":"js/chunk-001b96f2.10a36425.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[(_vm.isLoading)?_c('Spinner'):[_c('nav',[_c('ul',{staticClass:\"tabs-group\"},_vm._l((_vm.tabs),function(tab){return _c('li',{key:tab.id,class:['nav-tab', { 'active': tab.name === _vm.currentRoute }]},[_c('router-link',{key:tab.id,staticClass:\"nav-link\",attrs:{\"aria-current\":\"page\",\"to\":{ name: tab.name }}},[_vm._v(\" \"+_vm._s(tab.title)+\" \")])],1)}),0)]),_c('TweetReplies',{attrs:{\"initialreplies\":_vm.replies}}),(_vm.replies.length < 1)?_c('h5',{staticClass:\"m-6\"},[_vm._v(\" You don’t have any replies yet. \"),_c('p',{staticClass:\"text-muted\"},[_vm._v(\"Start replying to other tweets!. When you do, it’ll show up here.\")])]):_vm._e()]],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <Spinner v-if=\"isLoading\" />\r\n    <!-- NavTabs -->\r\n    <template v-else>\r\n      <nav>\r\n        <ul class=\"tabs-group\">\r\n          <li v-for=\"tab in tabs\" :key=\"tab.id\" :class=\"['nav-tab', { 'active': tab.name === currentRoute }]\">\r\n            <router-link class=\"nav-link\" aria-current=\"page\" :to=\"{ name: tab.name }\" :key=\"tab.id\">\r\n              {{ tab.title }}\r\n            </router-link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <TweetReplies :initialreplies=\"replies\" />\r\n      <h5 class=\"m-6\" v-if=\"replies.length < 1\">\r\n        You don’t have any replies yet.\r\n        <p class=\"text-muted\">Start replying to other tweets!. When you do, it’ll show up here.</p>\r\n      </h5>\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TweetReplies from '../components/TweetReplies.vue'\r\nimport usersAPI from '../apis/users'\r\nimport { Toast } from '../utils/helpers'\r\nimport Spinner from '../components/Spinner1.vue'\r\n\r\nexport default {\r\n  components: {\r\n    TweetReplies,\r\n    Spinner\r\n  },\r\n  data () {\r\n    return {\r\n      replies: [],\r\n      isLoading: true,\r\n      currentRoute: this.$router.currentRoute.name\r\n    }\r\n  },\r\n  methods: {\r\n    fetchTabs (userId) {\r\n      this.tabs = [\r\n        {\r\n          id: 1,\r\n          title: '推文',\r\n          name: 'user'\r\n        },\r\n        {\r\n          id: 2,\r\n          title: '回覆',\r\n          name: 'user-replies'\r\n        },\r\n        {\r\n          id: 3,\r\n          title: '喜歡的內容',\r\n          name: 'user-likes'\r\n        }\r\n      ]\r\n    },\r\n    async fetchUserReplies (userId) {\r\n      try {\r\n        // get all tweets\r\n        const response = await usersAPI.getRepliedTweets({ userId })\r\n        if (response.status !== 200) {\r\n          throw new Error(response.message)\r\n        }\r\n        const { data } = response\r\n        this.replies = data.map(reply => ({\r\n          id: reply.replyId,\r\n          UserId: reply.userOfReply,\r\n          User: {\r\n            id: reply.userOfReply,\r\n            account: reply.userAccountOfReply,\r\n            name: reply.userNameOfReply,\r\n            avatar: reply.userAvatarOfReply\r\n          },\r\n          Tweet: {\r\n            User: {\r\n              id: reply.userOfRepliedTweet,\r\n              account: reply.userAccountOfRepliedTweet\r\n            }\r\n          },\r\n          createdAt: reply.repliedTweetCreatedAt,\r\n          comment: reply.comment\r\n        }))\r\n        this.isLoading = false\r\n      } catch (error) {\r\n        this.isLoading = false\r\n        Toast.fire({\r\n          icon: 'error',\r\n          title: '無法取得使用者所有tweets，請稍後再試'\r\n        })\r\n      }\r\n    }\r\n  },\r\n  created () {\r\n    const { id: userId } = this.$route.params\r\n    this.fetchUserReplies(userId)\r\n    this.fetchTabs(userId)\r\n  },\r\n  beforeRouteUpdate (to, from, next) {\r\n    const { id } = to.params\r\n    this.fetchUserReplies(id)\r\n    this.fetchTabs(id)\r\n    next()\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.tabs-group {\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 1px solid var(--border);\r\n}\r\n\r\n.nav-tab {\r\n  &.active {\r\n    border-bottom: 2px solid var(--brand-color);\r\n  }\r\n}\r\n\r\n.nav-link {\r\n  display: block;\r\n  padding: 15px 30px;\r\n  color: var(--secondary);\r\n  cursor: pointer;\r\n\r\n  &.active {\r\n    color: var(--brand-color);\r\n  }\r\n\r\n  &:hover {\r\n    color: var(--brand-color);\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserReplies.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserReplies.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./UserReplies.vue?vue&type=template&id=7ffeba52&scoped=true&\"\nimport script from \"./UserReplies.vue?vue&type=script&lang=js&\"\nexport * from \"./UserReplies.vue?vue&type=script&lang=js&\"\nimport style0 from \"./UserReplies.vue?vue&type=style&index=0&id=7ffeba52&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7ffeba52\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',{staticClass:\"tweet-popular-section\"},[_c('div',{staticClass:\"tweet-popular-container\"},_vm._l((_vm.initialreplies),function(reply){return _c('div',{key:reply.id,staticClass:\"tweet\"},[_c('router-link',{staticClass:\"avatar\",attrs:{\"to\":{ name: 'user', params: { id: reply.UserId } }}},[_c('img',{staticClass:\"avatarImg\",attrs:{\"src\":_vm._f(\"emptyImage\")(reply.User.avatar),\"alt\":\"\"}})]),_c('div',{staticClass:\"tweet-info\"},[_c('div',{staticClass:\"tweet-user\"},[_c('router-link',{staticClass:\"tweet-user name\",attrs:{\"to\":{ name: 'user', params: { id: reply.UserId } }}},[_vm._v(_vm._s(reply.User.name))]),_c('router-link',{staticClass:\"tweet-user account\",attrs:{\"to\":{ name: 'user', params: { id: reply.UserId } }}},[_vm._v(\"@\"+_vm._s(reply.User.account)+\" ・ \"+_vm._s(_vm._f(\"fromNow\")(reply.createdAt)))])],1),_c('div',{staticClass:\"tweet-reply\"},[_c('span',{staticClass:\"text-reply\"},[_vm._v(\"回覆 \")]),_c('router-link',{staticClass:\"account\",attrs:{\"to\":{ name: 'user', params: { id: reply.Tweet.User.id } }}},[_vm._v(\"@\"+_vm._s(reply.Tweet.User.account))])],1),_c('p',{staticClass:\"tweet-content\"},[_vm._v(_vm._s(reply.comment))])])],1)}),0)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <section class=\"tweet-popular-section\">\r\n    <div class=\"tweet-popular-container\">\r\n      <div v-for=\"reply of initialreplies\" :key=\"reply.id\" class=\"tweet\">\r\n        <router-link class=\"avatar\" :to=\"{ name: 'user', params: { id: reply.UserId } }\">\r\n          <img :src=\"reply.User.avatar | emptyImage\" alt=\"\" class=\"avatarImg\" />\r\n        </router-link>\r\n        <div class=\"tweet-info\">\r\n          <div class=\"tweet-user\">\r\n            <router-link class=\"tweet-user name\" :to=\"{ name: 'user', params: { id: reply.UserId } }\">{{ reply.User.name }}</router-link>\r\n            <router-link class=\"tweet-user account\" :to=\"{ name: 'user', params: { id: reply.UserId } }\"\r\n              >@{{ reply.User.account }} ・ {{\r\n                reply.createdAt | fromNow\r\n              }}</router-link\r\n            >\r\n          </div>\r\n          <div class=\"tweet-reply\">\r\n            <span class=\"text-reply\">回覆 </span\r\n            ><router-link class=\"account\" :to=\"{ name: 'user', params: { id: reply.Tweet.User.id } }\">@{{ reply.Tweet.User.account }}</router-link>\r\n          </div>\r\n          <p class=\"tweet-content\">{{ reply.comment }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport { fromNowFilter, emptyImageFilter } from '../utils/mixin'\r\nimport { mapState, mapActions } from 'vuex'\r\n\r\nexport default {\r\n  mixins: [fromNowFilter, emptyImageFilter],\r\n  props: {\r\n    initialreplies: {\r\n      type: Array,\r\n      require: true\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      tweets: {}\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({ updatePageNow: 'updatePageNow' })\r\n  },\r\n  methods: {\r\n    ...mapActions(['updatePage'])\r\n  },\r\n  watch: {\r\n    updatePageNow () {\r\n      if (this.updatePageNow) {\r\n        this.updatePage(false)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.tweet-popular-section {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n}\r\n\r\n.tweet-popular-container {\r\n  width: 100%;\r\n}\r\n\r\n.tweet {\r\n  display: grid;\r\n  grid-template-columns: 50px auto;\r\n  grid-gap: 15px;\r\n  width: 100%;\r\n  min-height: 116px;\r\n  padding: 5px 20px;\r\n  border-bottom: 1px solid var(--border);\r\n}\r\n\r\n.tweet-content {\r\n  line-height: 24px;\r\n  color: var(--dark-100);\r\n  font-weight: 400;\r\n  white-space: pre-line;\r\n}\r\n\r\n.avatar {\r\n  margin-top: 7px;\r\n  border-radius: 50%;\r\n}\r\n\r\n.tweet-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n  width: 100%;\r\n}\r\n\r\n.tweet-user.name {\r\n  font-weight: 700;\r\n  color: var(--dark-100);\r\n}\r\n\r\n.tweet-user.account {\r\n  margin: 0 10px;\r\n  font-size: 14px;\r\n  color: var(--secondary);\r\n}\r\n\r\n.tweet-reply {\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n}\r\n\r\n.text-reply {\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 22px;\r\n  color: var(--secondary);\r\n}\r\n\r\n.account {\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 22px;\r\n  color: var(--brand-color);\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TweetReplies.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TweetReplies.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TweetReplies.vue?vue&type=template&id=2e9861e0&scoped=true&\"\nimport script from \"./TweetReplies.vue?vue&type=script&lang=js&\"\nexport * from \"./TweetReplies.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TweetReplies.vue?vue&type=style&index=0&id=2e9861e0&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2e9861e0\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TweetReplies.vue?vue&type=style&index=0&id=2e9861e0&prod&scoped=true&lang=css&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserReplies.vue?vue&type=style&index=0&id=7ffeba52&prod&lang=scss&scoped=true&\""],"sourceRoot":""}