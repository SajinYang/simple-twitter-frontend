{"version":3,"sources":["webpack:///./src/views/UserLikes.vue","webpack:///src/views/UserLikes.vue","webpack:///./src/views/UserLikes.vue?858c","webpack:///./src/views/UserLikes.vue?69a9","webpack:///./src/views/UserLikes.vue?e7a5"],"names":["render","_vm","this","_c","_self","isLoading","staticClass","_l","tabs","tab","key","id","class","name","currentRoute","attrs","_v","_s","title","userLikes","liked","params","User","_f","avatar","account","createdAt","description","on","$event","afterCreateReply","repliedCounts","isBeingLiked","require","stopPropagation","preventDefault","deleteLike","_e","likesCounts","length","staticRenderFns","mixins","components","ModalTweetReply","Spinner","data","methods","fetchTabs","userId","UserId","Toast","icon","tweetId","tweet","created","beforeRouteUpdate","next","component"],"mappings":"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","file":"js/chunk-49a68762.6a7fd58d.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[(_vm.isLoading)?_c('Spinner'):[_c('nav',[_c('ul',{staticClass:\"tabs-group\"},_vm._l((_vm.tabs),function(tab){return _c('li',{key:tab.id,class:['nav-tab', { 'active': tab.name === _vm.currentRoute }]},[_c('router-link',{key:tab.id,staticClass:\"nav-link\",attrs:{\"aria-current\":\"page\",\"to\":{ name: tab.name }}},[_vm._v(\" \"+_vm._s(tab.title)+\" \")])],1)}),0)]),_vm._l((_vm.userLikes),function(liked){return _c('section',{key:liked.id,staticClass:\"tweet-popular-section\"},[_c('div',{staticClass:\"tweet-popular-container\"},[_c('router-link',{staticClass:\"tweet\",attrs:{\"to\":{ name: 'tweet', params: { id: liked.id } }}},[_c('router-link',{staticClass:\"avatar\",attrs:{\"to\":{ name: 'user', params: { id: liked.User.id } }}},[_c('img',{staticClass:\"avatarImg\",attrs:{\"src\":_vm._f(\"emptyImage\")(liked.User.avatar),\"alt\":\"\"}})]),_c('div',{staticClass:\"tweet-info\"},[_c('div',{staticClass:\"tweet-user\"},[_c('router-link',{staticClass:\"tweet-user name\",attrs:{\"to\":{ name: 'user', params: { id: liked.User.id } }}},[_vm._v(\" \"+_vm._s(liked.User.name)+\" \")]),_c('router-link',{staticClass:\"tweet-user account\",attrs:{\"to\":{ name: 'user', params: { id: liked.User.id } }}},[_vm._v(\" @\"+_vm._s(liked.User.account)+\" ・ \"+_vm._s(_vm._f(\"fromNow\")(liked.createdAt)))])],1),_c('p',{staticClass:\"tweet-content\"},[_vm._v(\" \"+_vm._s(liked.description)+\" \")]),_c('div',{staticClass:\"tweet-icon-container\"},[_c('div',{staticClass:\"tweet-reply\"},[_c('router-link',{staticClass:\"cursor-default\",attrs:{\"to\":\"\"}},[_c('ModalTweetReply',{staticClass:\"tweet-icon-reply\",attrs:{\"initialTweet\":liked},on:{\"after-create-reply\":function($event){return _vm.afterCreateReply(liked.id)}}})],1),_c('span',{staticClass:\"tweet-icon-number\"},[_vm._v(_vm._s(liked.repliedCounts))])],1),_c('div',{staticClass:\"tweet-like\"},[(liked.isBeingLiked)?_c('img',{staticClass:\"tweet-icon-like\",attrs:{\"src\":require(\"../assets/icon/tweet-like.svg\"),\"alt\":\"\"},on:{\"click\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.deleteLike(liked.id)}}}):_vm._e(),_c('span',{staticClass:\"tweet-icon-number\"},[_vm._v(_vm._s(liked.likesCounts))])])])])],1)],1)])}),(_vm.userLikes.length < 1)?_c('h5',{staticClass:\"m-6\"},[_vm._v(\" You don’t have any likes yet. \"),_c('p',{staticClass:\"text-muted\"},[_vm._v(\"Tap the heart on any Tweet to show it some love. When you do, it’ll show up here.\")])]):_vm._e()]],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <Spinner v-if=\"isLoading\" />\r\n    <template v-else>\r\n      <nav>\r\n        <ul class=\"tabs-group\">\r\n          <li v-for=\"tab in tabs\" :key=\"tab.id\" :class=\"['nav-tab', { 'active': tab.name === currentRoute }]\">\r\n            <router-link class=\"nav-link\" aria-current=\"page\" :to=\"{ name: tab.name }\" :key=\"tab.id\">\r\n              {{ tab.title }}\r\n            </router-link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <section class=\"tweet-popular-section\" v-for=\"liked in userLikes\" :key=\"liked.id\">\r\n        <div class=\"tweet-popular-container\">\r\n          <router-link class=\"tweet\" :to=\"{ name: 'tweet', params: { id: liked.id } }\">\r\n            <router-link class=\"avatar\" :to=\"{ name: 'user', params: { id: liked.User.id } }\">\r\n              <img :src=\"liked.User.avatar | emptyImage\" alt=\"\" class=\"avatarImg\" />\r\n            </router-link>\r\n            <div class=\"tweet-info\">\r\n              <div class=\"tweet-user\">\r\n                <router-link class=\"tweet-user name\" :to=\"{ name: 'user', params: { id: liked.User.id } }\">\r\n                  {{ liked.User.name }}\r\n                </router-link>\r\n                <router-link class=\"tweet-user account\" :to=\"{ name: 'user', params: { id: liked.User.id } }\">\r\n                  @{{ liked.User.account }} ・ {{ liked.createdAt | fromNow }}</router-link>\r\n              </div>\r\n              <p class=\"tweet-content\">\r\n                {{ liked.description }}\r\n              </p>\r\n              <div class=\"tweet-icon-container\">\r\n                <div class=\"tweet-reply\">\r\n                  <router-link class=\"cursor-default\" to=\"\">\r\n                    <ModalTweetReply :initialTweet=\"liked\" class=\"tweet-icon-reply\"\r\n                      @after-create-reply=\"afterCreateReply(liked.id)\" />\r\n                  </router-link>\r\n                  <span class=\"tweet-icon-number\">{{ liked.repliedCounts }}</span>\r\n                </div>\r\n\r\n                <div class=\"tweet-like\">\r\n                  <img v-if=\"liked.isBeingLiked\" class=\"tweet-icon-like\" src=\"../assets/icon/tweet-like.svg\"\r\n                    @click.stop.prevent=\"deleteLike(liked.id)\" alt=\"\" />\r\n                  <span class=\"tweet-icon-number\">{{ liked.likesCounts }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </router-link>\r\n        </div>\r\n      </section>\r\n      <h5 class=\"m-6\" v-if=\"userLikes.length < 1\">\r\n        You don’t have any likes yet.\r\n        <p class=\"text-muted\">Tap the heart on any Tweet to show it some love. When you do, it’ll show up\r\n          here.</p>\r\n      </h5>\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { fromNowFilter, emptyImageFilter } from '../utils/mixin'\r\nimport usersAPI from '../apis/users'\r\nimport tweetsAPI from '../apis/tweets'\r\nimport { Toast } from '../utils/helpers'\r\nimport ModalTweetReply from '../components/ModalTweetReply.vue'\r\nimport Spinner from '../components/Spinner1.vue'\r\n\r\nexport default {\r\n  mixins: [fromNowFilter, emptyImageFilter],\r\n  components: {\r\n    ModalTweetReply,\r\n    Spinner\r\n  },\r\n  data () {\r\n    return {\r\n      userLikes: [],\r\n      isLoading: true,\r\n      currentRoute: this.$router.currentRoute.name\r\n    }\r\n  },\r\n  methods: {\r\n    fetchTabs (userId) {\r\n      this.tabs = [\r\n        {\r\n          id: 1,\r\n          title: '推文',\r\n          name: 'user'\r\n        },\r\n        {\r\n          id: 2,\r\n          title: '回覆',\r\n          name: 'user-replies'\r\n        },\r\n        {\r\n          id: 3,\r\n          title: '喜歡的內容',\r\n          name: 'user-likes'\r\n        }\r\n      ]\r\n    },\r\n    async fetchUserLiked (userId) {\r\n      try {\r\n        // get all tweets\r\n        const response = await usersAPI.getLikes({ userId })\r\n        if (response.status !== 200) {\r\n          throw new Error(response.message)\r\n        }\r\n        const { data } = response\r\n        this.userLikes = data.map(tweet => ({\r\n          id: tweet.TweetId,\r\n          description: tweet.description,\r\n          createdAt: tweet.createdAt,\r\n          likesCounts: tweet.likesCounts,\r\n          repliedCounts: tweet.repliedCounts,\r\n          isBeingLiked: true,\r\n          UserId: tweet.userOflikedTweet,\r\n          User: {\r\n            id: tweet.userOflikedTweet,\r\n            name: tweet.userNameOflikedTweet,\r\n            account: tweet.userAccountOflikedTweet,\r\n            avatar: tweet.userAvatarOflikedTweet\r\n          }\r\n        }))\r\n        this.isLoading = false\r\n      } catch (error) {\r\n        this.isLoading = false\r\n        Toast.fire({\r\n          icon: 'error',\r\n          title: '無法取得使用者所有tweets，請稍後再試'\r\n        })\r\n      }\r\n    },\r\n    async deleteLike (tweetId) {\r\n      try {\r\n        const { data } = await tweetsAPI.deleteLike({ tweetId })\r\n        if (data.status !== 'success') {\r\n          throw new Error(data.message)\r\n        }\r\n        this.userLikes.map((tweet) => {\r\n          return tweet.id === tweetId ? {\r\n            ...tweet,\r\n            isBeingLiked: false,\r\n            repliedCounts: tweet.repliedCounts - 1\r\n          } : tweet\r\n        })\r\n        // remove from page\r\n        this.userLikes = this.userLikes.filter(tweet => tweet.id !== tweetId)\r\n      } catch (error) {\r\n        Toast.fire({\r\n          icon: 'error',\r\n          title: '無法按喜歡，請稍後再試'\r\n        })\r\n      }\r\n    },\r\n    afterCreateReply (id) {\r\n      this.userLikes.map((tweet) => {\r\n        return tweet.id === id ? {\r\n          ...tweet,\r\n          repliedCounts: tweet.repliedCounts + 1\r\n        } : tweet\r\n      })\r\n    }\r\n  },\r\n  created () {\r\n    const { id: userId } = this.$route.params\r\n    this.fetchUserLiked(userId)\r\n    this.fetchTabs()\r\n  },\r\n  beforeRouteUpdate (to, from, next) {\r\n    const { id } = to.params\r\n    this.fetchUserLiked(id)\r\n    this.fetchTabs()\r\n    next()\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.tweet-popular-section {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n}\r\n\r\n.tweet-popular-container {\r\n  width: 100%;\r\n}\r\n\r\n.tweet {\r\n  display: grid;\r\n  grid-template-columns: 50px auto;\r\n  grid-gap: 15px;\r\n  width: 100%;\r\n  min-height: 105px;\r\n  padding: 10px 20px;\r\n  border-bottom: 1px solid var(--border);\r\n  color: var(--dark-100);\r\n}\r\n\r\n.tweet-info {\r\n  display: grid;\r\n}\r\n\r\n.tweet-content {\r\n  margin: 5px 0;\r\n  line-height: 24px;\r\n  color: var(--dark-100);\r\n  font-weight: 400;\r\n  white-space: pre-line;\r\n}\r\n\r\n.tweet-user.name {\r\n  font-weight: 700;\r\n  color: var(--dark-100);\r\n}\r\n\r\n.tweet-user.account {\r\n  margin: 0 10px;\r\n  font-size: 14px;\r\n  color: var(--secondary);\r\n}\r\n\r\n.tweet-icon-container {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 20px;\r\n}\r\n\r\n.tweet-reply,\r\n.tweet-like {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 42px;\r\n  cursor: pointer;\r\n}\r\n\r\n.tweet-icon-like {\r\n  height: 16px;\r\n  width: 16px;\r\n  margin-right: 12px;\r\n}\r\n\r\n.tweet-icon-like:hover {\r\n  height: 18px;\r\n  width: 18px;\r\n  transition: all 100ms ease-out;\r\n}\r\n\r\n.tweet-icon-reply {\r\n  margin-top: 3px;\r\n  margin-right: 3px;\r\n}\r\n\r\n.cursor-default {\r\n  cursor: default;\r\n}\r\n\r\n.tabs-group {\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 1px solid var(--border);\r\n}\r\n\r\n.nav-tab {\r\n  &.active {\r\n    border-bottom: 2px solid var(--brand-color);\r\n  }\r\n}\r\n\r\n.nav-link {\r\n  display: block;\r\n  padding: 15px 30px;\r\n  color: var(--secondary);\r\n  cursor: pointer;\r\n\r\n  &.active {\r\n    color: var(--brand-color);\r\n  }\r\n\r\n  &:hover {\r\n    color: var(--brand-color);\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserLikes.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserLikes.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./UserLikes.vue?vue&type=template&id=3935b67e&scoped=true&\"\nimport script from \"./UserLikes.vue?vue&type=script&lang=js&\"\nexport * from \"./UserLikes.vue?vue&type=script&lang=js&\"\nimport style0 from \"./UserLikes.vue?vue&type=style&index=0&id=3935b67e&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3935b67e\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserLikes.vue?vue&type=style&index=0&id=3935b67e&prod&lang=scss&scoped=true&\""],"sourceRoot":""}